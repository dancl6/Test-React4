{"version":3,"sources":["components/Project/index.js","components/About/index.js","components/Resume/index.js","components/ContactForm/index.js","components/Navigation/index.js","components/Header/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["Project","useState","github","deployed","image","name","projects","console","log","Container","key","Row","map","project","i","Col","sm","md","className","Card","Img","src","process","alt","ImgOverlay","Text","Link","href","About","Resume","ContactForm","Navigation","props","contactSelected","renderPage","Header","setContactSelected","data-testid","onClick","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+PAqFeA,MA7Ef,WAAoB,IAAD,EAGIC,mBAAS,CACxB,CACIC,OAAQ,yDACRC,SAAU,yDACVC,MAAO,wBACPC,KAAM,iCAEV,CACIH,OAAQ,kDACRC,SAAU,kDACVC,MAAO,0BACPC,KAAM,oCAEV,CACIH,OAAQ,4CACRC,SAAU,4CACVC,MAAO,qBACPC,KAAM,mBAEV,CACIH,OAAQ,iDACRC,SAAU,wCACVC,MAAO,iBACPC,KAAM,eAEV,CACIH,OAAQ,+CACRC,SAAU,+CACVC,MAAO,oBACPC,KAAM,kBAEV,CACIH,OAAQ,gEACRC,SAAU,gDACVC,MAAO,oBACPC,KAAM,oBAEV,CACIH,OAAQ,8CACRC,SAAU,6CACVC,MAAO,sBACPC,KAAM,qBAzCPC,EAHQ,oBAiDf,OAFAC,QAAQC,IAAI,gCACZD,QAAQC,IAAIF,EAAS,GAAGF,OAExB,6BACA,kBAACK,EAAA,EAAD,CAAYC,IAAI,aAChB,kBAACC,EAAA,EAAD,CAAMD,IAAK,OACNJ,EAASM,KAAI,SAACC,EAAQC,GAAT,OAClB,kBAACC,EAAA,EAAD,CAAKC,GAAI,GAAIC,GAAI,EAAGP,IAAKI,EAAGI,UAAY,eACxC,kBAACC,EAAA,EAAD,CAAOT,IAAKG,EAAQR,KAAMa,UAAU,iEACpC,kBAACC,EAAA,EAAKC,IAAN,CAAUV,IAAKG,EAAQT,MAAOiB,IAAMC,gBAA2BT,EAAQT,MAAOmB,IAAI,aAAaL,UAAY,+BAE3G,kBAACC,EAAA,EAAKK,WAAN,KAEI,kBAACL,EAAA,EAAKM,KAAN,MAIA,kBAACN,EAAA,EAAKO,KAAN,CAAWhB,IAAKG,EAAQX,OAAQyB,KAAMd,EAAQX,QAA9C,UACA,kBAACiB,EAAA,EAAKM,KAAN,MACA,kBAACN,EAAA,EAAKO,KAAN,CAAWhB,IAAKG,EAAQV,SAAUwB,KAAMd,EAAQV,UAAWU,EAAQR,gBC/D5DuB,MATf,WACI,OACI,yBAAKV,UAAY,YACjB,wBAAIA,UAAW,kBAAf,sYCiFOW,MAjFf,WACI,OACI,wBAAIX,UAAW,YAAf,kBACA,6BADA,0hBAGA,6BACA,6BAJA,mBAMA,6BANA,8eASA,6BACA,6BAVA,2BAYA,6BACA,6BAbA,sEAeA,6BAfA,2DAiBA,6BAjBA,0GAmBA,6BAnBA,qKAsBA,6BACA,6BAvBA,uFAyBA,6BAzBA,yFA2BA,6BA3BA,kGA6BA,6BA7BA,8UAgCA,6BACA,6BAjCA,sBAmCA,6BAnCA,6GAsCA,6BACA,6BAvCA,4iBA2CA,6BACA,6BA5CA,+FA+CA,6BACA,6BAhDA,gVAmDA,6BACA,6BApDA,gFAuDA,6BACA,6BAxDA,ojBA6DA,6BACA,6BA9DA,YAiEA,6BACA,6BAlEA,wGAoEA,6BApEA,+EAsEA,6BAtEA,wFCmCOY,MAnCf,WAAwB,IAAD,EAEF7B,mBAAS,CAC1B,CACIG,MAAO,iBAFNE,EAFc,oBAYvB,OAJEC,QAAQC,IAAI,wBAAyBF,EAAS,GAAGF,OAK/C,iCACA,kBAACK,EAAA,EAAD,CAAYC,IAAI,aAChB,kBAACC,EAAA,EAAD,CAAMD,IAAK,MAAMQ,UAAY,yDAC7B,kBAACH,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAIC,UAAY,oCAEhC,kBAACC,EAAA,EAAD,CAAQD,UAAU,uCAClB,kBAACC,EAAA,EAAKC,IAAN,CAAWC,IAAMC,gBAA2BhB,EAAS,GAAGF,MAAOmB,IAAI,aAAaL,UAAY,oBAM1F,uBAAGA,UAAW,+BAA+BS,KAAO,iCAApD,iCACA,uBAAGT,UAAW,+BAA+BS,KAAO,mDAApD,6DACA,uBAAGT,UAAW,+BAA+BS,KAAO,6BAApD,sCACA,uBAAGT,UAAW,+BAA+BS,KAAO,yCAApD,sDCUaI,MAvCnB,SAAoBC,GAAQ,IAIxBC,EAEED,EAFFC,gBAoBA,OACA,6BAEE,6BAlBiB,WACjB,OAAOA,GACP,IAAI,QACF,OAAO,kBAAC,EAAD,MACT,IAAI,SACF,OAAO,kBAAC,EAAD,MACT,IAAI,UACF,OAAO,kBAAC,EAAD,MACT,IAAI,UACF,OAAO,kBAAC,EAAD,OAcLC,MCsBSC,MAzDnB,SAAgBH,GAAQ,IAIlBI,EACEJ,EADFI,mBAGF,OACI,4BAAQlB,UAAU,+BAClB,4BACE,yBAAKA,UAAY,cAAjB,wBAIF,6BACE,wBAAIA,UAAU,YAIZ,uBAAGA,UAAU,aAAamB,cAAY,QAAQV,KAAK,UACnD,0BAAMW,QAAS,WACVF,EAAmB,WADxB,aAQA,uBAAGlB,UAAU,aAAamB,cAAY,YAAYV,KAAK,cACvD,0BAAMW,QAAS,WACVF,EAAmB,aADxB,cAOA,uBAAGlB,UAAU,aAAamB,cAAY,UAAUV,KAAK,YACrD,0BAAMW,QAAS,WACVF,EAAmB,aADxB,YAMA,uBAAGlB,UAAU,aAAamB,cAAY,SAASV,KAAK,WACpD,0BAAMW,QAAS,WACVF,EAAmB,YADxB,eChCGG,MAVf,WACI,OACI,wBAAIrB,UAAW,YACf,uBAAGA,UAAU,aAAaS,KAAK,mDAAmD,yBAAKJ,IAAI,WAAWF,IAAOC,oCAC7G,uBAAGJ,UAAU,aAAcS,KAAK,6BAA6B,yBAAKJ,IAAI,SAASF,IAAOC,kCACtF,uBAAGJ,UAAU,aAAcS,KAAK,2CAA2C,yBAAKJ,IAAI,WAAWF,IAAOC,sCC2B/FkB,MA9Bf,WAAgB,IAAD,EACmCvC,mBAAS,SAD5C,mBACJgC,EADI,KACaG,EADb,KAMf,OACI,6BACI,kBAAC,EAAD,CAGAA,mBAAoBA,IAEtB,8BAGM,kBAAC,EAAD,CAAYH,gBAAiBA,KAOnC,kBAAC,EAAD,QClBcQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnD,QAAQmD,MAAMA,EAAMC,c","file":"static/js/main.3f8808bd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\n\r\n\r\n\r\nfunction Project() {\r\n\r\n\r\n    const [projects] = useState([\r\n        {\r\n            github: 'https://github.com/dancl6/Javascript-PasswordGenerator',\r\n            deployed: 'https://dancl6.github.io/Javascript-PasswordGenerator/',\r\n            image: 'PasswordGenerator.png',\r\n            name: 'Javascript Password Generator'\r\n        },\r\n        {\r\n            github: 'https://github.com/dancl6/Coding-Quiz_Challenge',\r\n            deployed: 'https://dancl6.github.io/Coding-Quiz_Challenge/',\r\n            image: 'CodingQuizChallenge.png',\r\n            name: 'Javascript Coding Quiz Challenge'\r\n        },\r\n        {\r\n            github: 'https://github.com/dancl6/Daily-Scheduler',\r\n            deployed: 'https://dancl6.github.io/Daily-Scheduler/',\r\n            image: 'DailyScheduler.png',\r\n            name: 'Daily Scheduler'   \r\n        },\r\n        {\r\n            github: 'https://github.com/dancl6/Weather_API/settings',\r\n            deployed: 'https://dancl6.github.io/Weather_API/',\r\n            image: 'WeatherAPI.png',\r\n            name: 'Weather API'\r\n        },\r\n        {\r\n            github: 'https://github.com/dancl6/PWA-Budget-Tracker',\r\n            deployed: 'https://blooming-tundra-82006.herokuapp.com/',\r\n            image: 'BudgetTracker.png',\r\n            name: 'Budget Tracker'\r\n        },\r\n        {\r\n            github: 'https://github.com/DHernandez24e/tech-stop-n-shop/tree/master',\r\n            deployed: 'https://arcane-anchorage-18356.herokuapp.com/',\r\n            image: 'TechStopNShop.png',\r\n            name: 'Tech Stop-N-Shop'\r\n        },\r\n        {\r\n            github: 'https://github.com/aelisker/workout-tracker',\r\n            deployed: 'https://adj-workout-tracker.herokuapp.com/',\r\n            image: 'Workout-Tracker.png',\r\n            name: 'Workout Tracker'\r\n        }\r\n    ])\r\n    console.log(\"i am at projects console log\")\r\n    console.log(projects[0].image)\r\n    return (\r\n    <div>\r\n    <Container  key=\"Container\"  >\r\n    <Row  key= \"Row\"  >\r\n        {projects.map((project,i) =>(\r\n    <Col sm={12} md={3} key={i} className = \"set-padding\" >\r\n    <Card  key={project.name} className=\"bg-dark text-white card-background container-fluid col-border\">\r\n    <Card.Img key={project.image} src= {process.env.PUBLIC_URL+\"/\"+project.image} alt=\"Card image\" className = \"image-size container-fluid\"/>\r\n    \r\n    <Card.ImgOverlay>\r\n        {/* <Card.Title></Card.Title> */}\r\n        <Card.Text>\r\n        {/* This is a wider card with supporting text below as a natural lead-in to\r\n        additional content. This content is a little bit longer. */}\r\n        </Card.Text>\r\n        <Card.Link key={project.github} href={project.github}>GitHub</Card.Link>\r\n        <Card.Text></Card.Text>\r\n        <Card.Link key={project.deployed} href={project.deployed}>{project.name}</Card.Link>\r\n    </Card.ImgOverlay>\r\n    </Card>\r\n    </Col>\r\n        ))}\r\n    </Row>\r\n    </Container>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Project;","import React from 'react';\r\n\r\nfunction About() {\r\n    return (\r\n        <div className = \"flex-row\">\r\n        <h1 className= \"flex-row width\"> Computer programmer/web developer with engineering background located in York, Pa. Three years professional programming experience in Tcl, Linux and Perl, programming ANSYS and ICEM macros. Strategic problem-solver with a core value of integrity. Changing from engineering to programming because I enjoy coding. Looking forward to my web development journey.  Have enjoyed it so far!\r\n        </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n// import Row from 'react-bootstrap/Row';\r\n// import Col from 'react-bootstrap/Col';\r\n// import Container from 'react-bootstrap/Container';\r\n\r\nfunction Resume() {\r\n    return (\r\n        <h3 className= \"flex-row\">CAREER SUMMARY:\r\n        <br></br>\r\n        Thorough Back-End Web Developer with 3 years professional programming experience in Tcl, Linux, and Perl, programming ANSYS and ICEM macros. A passion for computer programming. Applying a Masters Degree in Engineering from Penn State towards web development and building functional server-side applications. Strategic problem-solver with a core value of  integrity and the  persistence necessary to execute goals. Certified EIT. Agile/Scrum experience developing MVP in sprints and significant successful experiences working on a team. \r\n        <br></br>\r\n        <br></br>\r\n        TECHNICAL SKILLS \r\n        <br></br>\r\n        Languages: JavaScript, SQLite3, MySQL, HTML, CSS,  Sequelize, Node.js, Markdown, Perl, Tcl, Linux, FORTRAN, C++  \r\n        Applications: CSS Grid Layout, GitHub, GitBash, jQuery, Express, Bootstrap, HTML DOM Manipulation, Insomnia, Heroku, Moment.js, Object Oriented Programming, Test Driven Development, Jest, Google Map API, Materialize Modals, ANSYS CFX: Pre,Post and Solve, ANSYS Workbench, Design Modeler, ICEM CFD, Unigraphics, Solid Edge, Fluent, FloEFD, MongoDB, Mongoose, React, Redux, Graphql \r\n        <br></br>\r\n        <br></br>\r\n        WEB DEVELOPMENT PROJECTS \r\n        <br></br>\r\n        <br></br>\r\n        Weather API | Deployed App: https://dancl6.github.io/Weather_API/ | \r\n        <br></br>\r\n        GitHub Repository: https://github.com/dancl6/Weather_API  \r\n        <br></br>\r\n        Web application that returns current weather and five-day forecast for a given city using a weather API\r\n        <br></br>\r\n        Role in Project: Responsible for front-end HTML, CSS and Bootstrap and back-end API calls.\r\n        Technologies Used: Open Weather API, HTML, CSS,  JavaScript, Bootstrap. \r\n        <br></br>\r\n        <br></br>\r\n        Tech Stop N Shop |Deployed App:  ​https://arcane-anchorage-18356.herokuapp.com/\r\n        <br></br>\r\n        ​GitHub Repository: https://github.com/DHernandez24e/tech-stop-n-shop/tree/master \r\n        <br></br>\r\n        Full Stack web application that allows users to browse and purchase items and modify inventory. \r\n        <br></br>\r\n        Role in Project: Responsible for MySQL database creation, API calls for sign-up, and back-end and front-end implementation of profit page and inventory page for read/write access. \r\n        Technologies Used: Node.js, HTML, CSS, Bootstrap, MySQL, Express, Handlebars, Dot-env, Bcrypt, URL Shortly, Dark-mode, Sequelize, j-Query, Passport.js. \r\n        <br></br>\r\n        <br></br>\r\n        RELEVANT EXPERIENCE \r\n        <br></br>\r\n        Lead Design Engineer \t\t\t\t,\t\tOctober 2019 to  February 2020,\r\n        Teledyne Energy Systems\t\t\t,\t\t\t\tHunt Valley, MD\r\n        <br></br>\r\n        <br></br>   \r\n        Company provides energy generation equipment. \r\n        Thoroughly reviewed ASME BPVC Section VIII code for the 2019 version determining whether any designs were impacted. \r\n        Built a computational model in Fluent, solving for the temperature and flow of fluid (thermal fluid model) for a military application. Used Ansys Workbench to solve for the temperature and structural stress (thermal mechanical model), looking at CTE mismatch for a space vehicle application. Where possible, validated simulations with hand calculations for Heat Transfer and Stress Analysis. \r\n        <br></br>\r\n        <br></br>\r\n        Structural Analysis Engineer  \t\t,\t\t\t\tMay 2017 to April 2018,\r\n        Voith Hydro\t \t\t\t\t\t,\t\t\t\tYork, PA \r\n        <br></br>\r\n        <br></br>  \r\n        Company designs and manufactures hydro-turbines. \r\n        Performed Static FEA of hydraulic turbine components to validate safety and to design for performance improvements using High Performance Computing (HPC) for simulations with ANSYS Workbench. Wrote reports and gave presentations to internal customers within the engineering department\r\n        <br></br>\r\n        <br></br>\r\n        CFD Engineer\t\t\t\t\t,\t\t\t\tJune 2008  to May 2017 ,\r\n        Voith Hydro\t\t\t\t\t\t,\t\t\t\tYork, PA   \r\n        <br></br>\r\n        <br></br>\r\n        Company designs and manufactures hydro-turbines. \r\n        Supported Hydraulic Engineering department with the manual creation of solid model geometries, meshes and CFD simulations using the software Unigraphics (NX), ICEM and CFX, respectively, for all hydro-turbine components including the spiral case, stay vanes, wicket gates, runner and draft tube, for the existing machine or for improvements in performance. \r\n        Implemented coding and automation of CFD processes using several programming languages, including Tcl, Linux and Perl. \r\n        Mentored a new hire on the CFD team.\r\n        <br></br>\r\n        <br></br>\r\n        \r\n        EDUCATION\r\n        <br></br>\r\n        <br></br> \r\n        University of California, Berkeley Extension: Full Stack Web Development Coding Bootcamp, August 2020 \r\n        <br></br>\r\n        Pennsylvania State University: Master’s Degree, Mechanical Engineering,  \r\n        <br></br>\r\n        New Jersey Institute of Technology: Bachelor’s Degree, Mechanical Engineering,\r\n        \r\n        \r\n\r\n        </h3>\r\n    )\r\n}\r\n\r\nexport default Resume;","import React, { useState } from 'react';\r\nimport { validateEmail } from '../../utils/helpers';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nfunction ContactForm() {\r\n\r\n  const [projects] = useState([\r\n    {\r\n        image: 'DanPic2.jpg'      \r\n    }\r\n  ])\r\n\r\n  console.log(\"i am at project.image\", projects[0].image)\r\n\r\n\r\n// JSX\r\nreturn (\r\n    <section>\r\n    <Container  key=\"Container\"  >\r\n    <Row  key= \"Row\" className = \"d-flex justify-content-md-center link container-fluid\" >\r\n    <Col sm={3} md={3}  className = \" d-flex justify-content-center  \">\r\n\r\n    <Card   className=\"bg-dark text-white card-background \">\r\n    <Card.Img  src= {process.env.PUBLIC_URL+\"/\"+projects[0].image} alt=\"Card image\" className = \"image-size \"/>\r\n    </Card>\r\n    </Col>\r\n    </Row>\r\n    </Container>\r\n\r\n      <a className= \"text-center set-padding link\" href = \"mailto:danielclyons@yahoo.com\">Email: danielclyons@yahoo.com</a>\r\n      <a className= \"text-center set-padding link\" href = \"https://www.linkedin.com/in/dan-lyons-41380337/\">LinkedIn: https://www.linkedin.com/in/dan-lyons-41380337/</a>\r\n      <a className= \"text-center set-padding link\" href = \"https://github.com/dancl6\">GitHub: https://github.com/dancl6 </a>\r\n      <a className= \"text-center set-padding link\" href = \"https://dancl6.github.io/Test-React4/\">Portfolio: https://dancl6.github.io/Test-React4/</a>\r\n\r\n      \r\n    </section>\r\n)\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport Project from '../Project';\r\nimport About from '../About';\r\nimport Resume from '../Resume';\r\n// import NavTabs from '../NavTabs';\r\nimport ContactForm from '../ContactForm'\r\nfunction Navigation(props) {\r\n\r\n  const {\r\n\r\n    contactSelected\r\n\r\n  } = props;\r\n\r\n\r\n    const renderPage = () => {\r\n      switch(contactSelected) {\r\n      case `About`:\r\n        return <About />;\r\n      case `Resume`:\r\n        return <Resume />;\r\n      case `Project`:\r\n        return <Project />;\r\n      case `Contact`:\r\n        return <ContactForm />;\r\n      default:\r\n    }\r\n  };\r\n\r\n\r\n    return (\r\n    <div>\r\n\r\n      <div>\r\n        {\r\n          // Render the component returned by 'renderPage()'\r\n          // YOUR CODE HERE\r\n          //\r\n          renderPage()\r\n        }\r\n      </div>\r\n    </div>\r\n    );\r\n    }\r\n\r\n    export default Navigation;","import React from 'react';\r\n\r\n\r\nfunction Header(props) {\r\n\r\n    const {\r\n\r\n      setContactSelected\r\n    } = props;\r\n\r\n    return (\r\n        <header className=\"flex-row px-1 header-stylin\">\r\n        <h2>\r\n          <div className = \"color-font\" >\r\n            Dan Lyons Portfolio\r\n          </div>\r\n        </h2>\r\n        <nav>\r\n          <ul className=\"flex-row\">    \r\n\r\n\r\n\r\n            <a className=\"nav-stylin\" data-testid=\"about\" href=\"#about\" >\r\n            <span onClick={() => {\r\n                 setContactSelected(\"About\");\r\n                \r\n                //  props.handlePageChange(categories[0].value=true)\r\n                }}>\r\n            About me\r\n            </span>\r\n            </a>           \r\n            <a className=\"nav-stylin\" data-testid=\"portfolio\" href=\"#portfolio\" >\r\n            <span onClick={() => {\r\n                 setContactSelected(\"Project\");\r\n                //  props.handlePageChange(categories[1].value=true)\r\n                }}>\r\n            Portfolio\r\n            </span>\r\n            </a>            \r\n            <a className=\"nav-stylin\" data-testid=\"contact\" href=\"#contact\" >\r\n            <span onClick={() => {\r\n                 setContactSelected(\"Contact\");\r\n\r\n                }}>Contact</span>\r\n            \r\n            </a>            \r\n            <a className=\"nav-stylin\" data-testid=\"resume\" href=\"#resume\" >\r\n            <span onClick={() => {\r\n                 setContactSelected(\"Resume\");\r\n                //  props.handlePageChange(categories[2].value=true)\r\n                }}>\r\n            Resume\r\n            </span>\r\n            </a>            \r\n            </ul>\r\n          </nav>\r\n          </header>\r\n    );\r\n    }\r\n\r\n    export default Header;","import React from 'react';\r\nlet  imageLinkedin = 'LinkedInImage.png';\r\nlet  imageGitHub = 'GitHubImage.png';\r\nlet  imageFacebook = 'FacebookImage.png';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <h1 className= \"flex-row\">\r\n        <a className=\"img-stylin\" href=\"https://www.linkedin.com/in/dan-lyons-41380337/\" ><img alt=\"Linkedin\" src = {process.env.PUBLIC_URL+\"/\"+imageLinkedin}/></a>\r\n        <a className=\"img-stylin\"  href=\"https://github.com/dancl6\" ><img alt=\"GitHub\" src = {process.env.PUBLIC_URL+\"/\"+imageGitHub}/></a>\r\n        <a className=\"img-stylin\"  href=\"https://www.facebook.com/dan.lyons.583/\" ><img alt=\"Facebook\" src = {process.env.PUBLIC_URL+\"/\"+imageFacebook}/></a>\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\nimport Navigation from './components/Navigation';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n// import Project from './components/Project';\r\n// import ContactForm from './components/ContactForm'\r\n\r\nfunction App() {\r\n    const [contactSelected, setContactSelected] = useState(\"About\");\r\n    // const [categories] = useState([\r\n    //   \"About\", \"Resume\", \"Project\", \"Contact\"\r\n    // ])\r\n \r\nreturn (\r\n    <div>\r\n        <Header\r\n        // categories={categories}\r\n        // contactSelected={contactSelected}\r\n        setContactSelected={setContactSelected}        \r\n          ></Header>\r\n      <main>\r\n        {/* {!contactSelected ? (\r\n          <> */}\r\n            <Navigation contactSelected={contactSelected}/>\r\n\r\n          {/* </> */}\r\n        {/* ) : ( */}\r\n            {/* <ContactForm></ContactForm> */}\r\n          {/* )} */}\r\n      </main>\r\n      <Footer></Footer>\r\n    </div>\r\n)\r\n\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}